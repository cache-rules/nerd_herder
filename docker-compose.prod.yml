version: '3'
services:
  postgres:
    image: postgres:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    env_file:
      - postgres.env
    volumes:
      - '/var/lib/postgresql/data:/var/lib/postgresql/data/'
  redis:
    image: 'redis:alpine'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  nerd_herder:
    build:
      context: .
      dockerfile: docker/nerd_herder/Dockerfile
    image: registry.gitlab.com/cache-rules/nerd_herder_ops/nerd_herder:latest
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    env_file:
      - nerd_herder.env
    depends_on:
      - redis
      - postgres
    links:
      - redis
      - postgres
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    image: registry.gitlab.com/cache-rules/nerd_herder_ops/frontend:latest
    deploy:
      replicas: 0
  reverse_proxy:
    build:
      context: .
      dockerfile: docker/reverse_proxy/Dockerfile
    image: registry.gitlab.com/cache-rules/nerd_herder_ops/reverse_proxy:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    env_file:
      - caddy.env
    links:
      - nerd_herder
    depends_on:
      - nerd_herder
    volumes:
      - '/var/lib/caddy:/root/.caddy'
    ports:
      - '80:80'
      - '443:443'
